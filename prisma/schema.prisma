// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Employee {
    id                Int      @id @default(autoincrement())
    fullName          String
    phone             String   @unique
    email             String   @unique
    workEmail         String   @unique
    pathToAvatarPhoto String
    position          String
    age               Int
    hireDate          DateTime @default(now()) @db.Date
    clients           Client[]
    orders            Order[]
}

model Client {
    id               Int      @id @default(autoincrement())
    fullName         String
    registrationDate DateTime @db.Date
    orders           Order[]
    source           String   @default("unknown")
    manager          Employee @relation(fields: [managerId], references: [id])
    managerId        Int
    birthdate        DateTime @db.Date
}

model Dessert {
    id          Int              @id @default(autoincrement())
    name        String           @unique
    price       Decimal
    description String           @default("")
    orders      DessertsOrders[]
    Request     Request[]
}

model Request {
    id             Int     @id @default(autoincrement())
    dessert        Dessert @relation(fields: [dessertId], references: [id])
    dessertId      Int     @default(0)
    mondayCount    Int     @default(0)
    tuesdayCount   Int     @default(0)
    wednesdayCount Int     @default(0)
    thursdayCount  Int     @default(0)
    fridayCount    Int     @default(0)
    saturdayCount  Int     @default(0)
    sundayCount    Int     @default(0)
}

model Order {
    id             Int              @id @default(autoincrement())
    createdAt      DateTime         @default(now())
    name           String
    description    String           @default("")
    client         Client           @relation(fields: [clientId], references: [id])
    clientId       Int
    totalPrice     Decimal
    deliveryMethod String
    receivedAt     DateTime         @db.Timestamp()
    manager        Employee         @relation(fields: [managerId], references: [id])
    managerId      Int
    comment        String           @default("")
    status         Status           @default(NEW)
    desserts       DessertsOrders[]
}

model DessertsOrders {
    order          Order   @relation(fields: [orderId], references: [id])
    orderId        Int
    dessert        Dessert @relation(fields: [dessertId], references: [id])
    dessertId      Int
    dessertsNumber Int

    @@id([orderId, dessertId])
}

enum Status {
    NEW
    AT_WORK
    AT_DELIVERY
    COMPLETED
    CANCELED
}
